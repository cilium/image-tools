name: Images
on:
  pull_request: {}
  push:
    branches: [master]

jobs:
  generate-images-matrix:
    runs-on: ubuntu-24.04
    outputs:
      matrix: ${{ steps.generate-images-matrix.outputs.matrix }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8  # v5.0.0
      - name: Generate images matrix
        id: generate-images-matrix
        run: echo "matrix=$(ls images | jq -R . | jq -sc '{images:.}')" | tee $GITHUB_OUTPUT

  build-and-push:
    name: ${{ github.event_name == 'push' && 'Build and push' || 'Build' }} ${{ matrix.image }} image
    runs-on: oracle-vm-32cpu-128gb-x86-64
    needs: generate-images-matrix
    strategy:
      fail-fast: false
      matrix:
        image: ${{ fromJSON(needs.generate-images-matrix.outputs.matrix).images }}
    timeout-minutes: 720
    steps:
      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8  # v5.0.0
        with:
          fetch-depth: 0

      - name: Set up QEMU
        uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392  # v3.6.0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435  # v3.11.1

      - name: Set up job variables
        id: vars
        run: |
          if [ ${{ github.event.issue.pull_request || github.event.pull_request }} ]; then
            echo "push=false" >> $GITHUB_OUTPUT
          else
            echo "push=true" >> $GITHUB_OUTPUT
          fi

          if [[ -d images/${{ matrix.image }}/test ]]; then
            echo "test=true" >> $GITHUB_OUTPUT
          else
            echo "test=false" >> $GITHUB_OUTPUT
          fi

          IMAGE_TAG=$(scripts/make-image-tag.sh images/${{ matrix.image }})
          echo "image_tag=${IMAGE_TAG}" >> $GITHUB_OUTPUT

          # Map image directory name to image name
          case "${{ matrix.image }}" in
            bpftool) IMAGE_NAME="cilium-bpftool" ;;
            checkpatch) IMAGE_NAME="cilium-checkpatch" ;;
            compilers) IMAGE_NAME="image-compilers" ;;
            iptables) IMAGE_NAME="iptables" ;;
            llvm) IMAGE_NAME="cilium-llvm" ;;
            maker) IMAGE_NAME="image-maker" ;;
            network-perf) IMAGE_NAME="network-perf" ;;
            startup-script) IMAGE_NAME="startup-script" ;;
            tester) IMAGE_NAME="image-tester" ;;
            *) IMAGE_NAME="${{ matrix.image }}" ;;
          esac
          echo "image_name=${IMAGE_NAME}" >> $GITHUB_OUTPUT

          # Check if image exists in registry
          if docker buildx imagetools inspect "quay.io/cilium/${IMAGE_NAME}:${IMAGE_TAG}" >/dev/null 2>&1; then
            echo "Image ${IMAGE_NAME}:${IMAGE_TAG} already exists in registry"
            echo "build=false" >> $GITHUB_OUTPUT
          else
            echo "Will build ${IMAGE_NAME}:${IMAGE_TAG} as it's not present in registry"
            echo "build=true" >> $GITHUB_OUTPUT
          fi

          cat $GITHUB_OUTPUT

      - name: Login to quay.io
        if: steps.vars.outputs.build == 'true' && steps.vars.outputs.push == 'true'
        uses: docker/login-action@5e57cd118135c172c3672efd75eb46360885c0ef # v3.6.0
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_USERNAME_IMAGE_TOOLS }}
          password: ${{ secrets.QUAY_PASSWORD_IMAGE_TOOLS }}

      - name: ${{ steps.vars.outputs.push == 'true' && 'Build and push' || 'Build' }} image
        if: steps.vars.outputs.build == 'true'
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83  # v6.18.0
        with:
          context: images/${{ matrix.image }}
          file: images/${{ matrix.image }}/Dockerfile
          platforms: linux/amd64,linux/arm64
          provenance: false
          push: ${{ steps.vars.outputs.push }}
          tags: quay.io/cilium/${{ steps.vars.outputs.image_name }}:${{ steps.vars.outputs.image_tag }}

      - name: Test image
        if: steps.vars.outputs.build == 'true' && steps.vars.outputs.test == 'true'
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83  # v6.18.0
        with:
          context: images/${{ matrix.image }}
          file: images/${{ matrix.image }}/Dockerfile
          platforms: linux/amd64,linux/arm64
          provenance: false
          target: test
