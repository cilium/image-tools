{
  $schema: 'https://docs.renovatebot.com/renovate-schema.json',
  extends: [
    'config:recommended',
    ':gitSignOff',
    'helpers:pinGitHubActionDigests',
  ],
  // This ensures that the gitAuthor and gitSignOff fields match
  gitAuthor: 'renovate[bot] <bot@renovateapp.com>',
  includePaths: [
    '.github/workflows/**',
    'images/**/go.mod',
    'images/**/go.sum',
    'images/**/Dockerfile',
  ],
  postUpdateOptions: [
    'gomodTidy',
  ],
  pinDigests: true,
  ignorePresets: [
    ':prHourlyLimit2',
  ],
  separateMajorMinor: true,
  separateMultipleMajor: true,
  separateMinorPatch: true,
  pruneStaleBranches: true,
  baseBranchPatterns: [
    'master',
  ],
  vulnerabilityAlerts: {
    enabled: true,
  },
  labels: [
    'renovate/stop-updating',
  ],
  stopUpdatingLabel: 'renovate/stop-updating',
  packageRules: [
    {
      groupName: 'all github action dependencies',
      groupSlug: 'all-github-action',
      matchFileNames: [
        '.github/workflows/**',
      ],
      matchUpdateTypes: [
        'major',
        'minor',
        'digest',
        'patch',
        'pin',
        'pinDigest',
      ],
    },
    {
      groupName: 'all go dependencies',
      groupSlug: 'all-go-deps',
      matchFileNames: [
        'go.mod',
        'go.sum',
      ],
      postUpdateOptions: [
        // update source import paths on major updates
        'gomodUpdateImportPaths',
      ],
      matchUpdateTypes: [
        'major',
        'minor',
        'digest',
        'patch',
        'pin',
        'pinDigest',
      ],
      matchBaseBranches: [
        'master',
      ],
    },
    {
      // Avoid updating patch releases of golang in go.mod
      enabled: false,
      matchFileNames: [
        'go.mod',
      ],
      matchDepNames: [
        'go',
      ],
      matchDatasources: [
        'golang-version',
      ],
      matchUpdateTypes: [
        'patch',
      ],
      matchBaseBranches: [
        'master',
      ],
    },
    // Group base images updates
    {
      matchDatasources: [
        'docker',
      ],
      matchPackageNames: [
        'docker.io/library/alpine',
        'docker.io/library/docker',
        'docker.io/library/golang',
        'docker.io/library/ubuntu',
        'gcr.io/go-containerregistry/crane',
        'registry.access.redhat.com/ubi8/ubi',
      ],
      schedule: [
        'on the first day of the month',
      ],
    },
  ],
  customManagers: [
    {
      customType: 'regex',
      managerFilePatterns: [
        '^\\.github/workflows/[^/]+\\.yaml$',
      ],
      // This regex manages version strings in GitHub actions workflow files,
      // similar to the examples shown here:
      //   https://docs.renovatebot.com/modules/manager/regex/#advanced-capture
      matchStrings: [
        '# renovate: datasource=(?<datasource>.*?) depName=(?<depName>.*?)\\s+.+version: (?<currentValue>.*)',
      ],
    },
    {
      customType: 'regex',
      managerFilePatterns: [
        '^go\\.mod$',
      ],
      matchStrings: [
        '// renovate: datasource=(?<datasource>.*?) depName=(?<depName>.*?)\\s+go (?<currentValue>.*)',
      ],
    },
    {
      customType: 'regex',
      managerFilePatterns: [
        'images/**/Dockerfile',
      ],
      matchStrings: [
        '# renovate: datasource=(?<datasource>.*?) depName=(?<depName>.*?)\\s+ARG .*_VERSION="(?<currentValue>.*)"',
        '# renovate: datasource=(?<datasource>.*?) depName=(?<depName>.*?)\\s+ARG .*_VERSION=(?<currentValue>.*)',
      ],
    },
  ],
}
